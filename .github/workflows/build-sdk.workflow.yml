name: NodeJS-SDK

on:
  push:
    branches:
      - main
      - staging
      - dev
      - VL-6483-fix
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  NODE_VERSION: '20'
jobs:
  test-react-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone repository
        uses: actions/checkout@v4
      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
    #   - name: Get yarn cache directory path
    #     id: yarn-cache-dir-path
    #     run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
    #   - name: Cache node modules
    #     uses: actions/cache@v3
    #     id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
    #     with:
    #       path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
    #       key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    #       restore-keys: |
    #         ${{ runner.os }}-yarn-
      # Install dependencies
      - name: Install dependencies
        run: yarn --frozen-lockfile --pure-lockfile
      # Run test 
      - name: Run Test
        run: yarn test
        continue-on-error: true

#   build-nodejs-sdk:
#     runs-on: ubuntu-latest
#     needs: 
#       - test-nodejs-sdk
#     steps:
#       - name: Git clone repository
#         uses: actions/checkout@v4
#       # Setup Node.js
#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ env.NODE_VERSION }}
#       - name: Get yarn cache directory path
#         id: yarn-cache-dir-path
#         run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
#       - name: Cache node modules
#         uses: actions/cache@v3
#         id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
#         with:
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-
#       # Install dependencies
#       - name: Install dependencies
#         run: yarn --frozen-lockfile --pure-lockfile
#       # Build SDK
#       - name: Build SDK
#         run: yarn lerna run build
#       # Pack SDK
#       - name: Pack SDK
#         run: yarn pack
#       # Publish to npm
#       # TODO required auth for publish
#       - name: Publish
#         if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' }}
#         run: echo "npm publish ${{ github.event.repository.name }}-${{ env.VERSION }}.tgz --tag ${{ env.RELEASE_TAG }}"
#         env: 
#           RELEASE_TAG: ${{ github.ref == 'refs/heads/main' && format('{0}', 'prod' ) || 'rc' }}
#       # Upload Artifacts
#       - name: Upload Artifact
#         if: success()
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ github.event.repository.name }}-${{ env.VERSION }}
#           path: ${{ github.event.repository.name }}-${{ env.VERSION }}.tgz
#           if-no-files-found: error
#           retention-days: 1

